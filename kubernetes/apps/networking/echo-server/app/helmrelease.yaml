---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app echo-server
  namespace: networking
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - worker
    controllers:
      echo-server:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: docker.io/jmalloc/echo-server
              tag: 0.3.6
            env:
              PORT: &port 8080
            resources:
              requests:
                cpu: 5m
                memory: 10Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          hajimari.io/icon: video-input-antenna
        hosts:
          - host: '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - '{{ .Release.Name }}.${SECRET_DOMAIN}'
        className: external
