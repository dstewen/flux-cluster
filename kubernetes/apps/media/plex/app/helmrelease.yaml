---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
#    - name: intel-device-plugin-gpu
#      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
#    - name: volsync
#      namespace: volsync
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/plex-beta
      tag: 1.32.7.7571-13cdc68dc@sha256:59d99221e5560d57ecb1e8550c330bb7dd5ccb77cd0ecab3832125a6608b3207
    env:
      TZ: Australia/Victoria
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          io.cilium/lb-ipam-ips: "192.168.10.224"
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          hajimari.io/enable: "false"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#          nginx.ingress.kubernetes.io/ssl-passthrough: "true"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
#          nginx.ingress.kubernetes.io/configuration-snippet: |
#            proxy_ssl_name plex-0;
#            proxy_ssl_server_name on;
#            location = / {
#              if ($http_x_plex_device = ""){
#                return 301 $scheme://$host/web/index.html;
#              }
#            }
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: plex.media.svc.cluster.local
                    port:
                      number: 32400
        tls:
          - hosts:
              - *host

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 105, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block
    persistence:
      media:
        enabled: true
        type: nfs
        server: 192.168.10.15
        path: /volume2/piNFS01/flux-cluster/plex/media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
#    nodeSelector:
#      intel.feature.node.kubernetes.io/gpu: "true"
#    affinity:
#      podAntiAffinity:
#        requiredDuringSchedulingIgnoredDuringExecution:
#          - labelSelector:
#              matchExpressions:
#                - key: app.kubernetes.io/name
#                  operator: In
#                  values: ["frigate"]
#            topologyKey: kubernetes.io/hostname
    resources:
      requests:
#        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
#        gpu.intel.com/i915: 1
        memory: 4000Mi
