---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
#    - name: intel-device-plugin-gpu
#      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
#    - name: volsync
#      namespace: volsync
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.32.7.7621-871adbd44@sha256:f9f77dc5e17cab9fae5ece663a64d026e3c75142b3b60bb4a52bf061957412be
            env:
              TZ: Australia/Victoria
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
#                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 2Gi
              limits:
#                gpu.intel.com/i915: 1
                memory: 4Gi
        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node-role.kubernetes.io/worker
                    operator: In
                    values:
                    - worker
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                    - amd64
#          nodeSelector:
#            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105, 10000]
        statefulset:
          volumeClaimTemplates:
            - name: config
              mountPath: /config
              accessMode: ReadWriteOnce
              size: 10Gi
              storageClass: ceph-block
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          io.cilium/lb-ipam-ips: "192.168.10.224"
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: main
                    port: 32400
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-0
        storageClass: ceph-block
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: 192.168.10.15
        path: /volume2/piNFS01/flux-cluster/plex/media
        globalMounts:
          - path: /media
            readOnly: true
