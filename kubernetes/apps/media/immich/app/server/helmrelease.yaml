---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  dependsOn:
    - name: dragonfly-operator
      namespace: database
#    - name: immich-typesense
#      namespace: media
  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3

            envFrom: &envFrom
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret

        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.106.4@sha256:d39cb7ecbcc9924f2c51a3e0deb8a469075996c6ba9e1384eb2ddb550984848e
            args: ["start-server.sh"]

            env:
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload

            envFrom: *envFrom

            resources:
              requests:
                cpu: 100m
                memory: 250Mi

        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

    service:
      main:
        controller: main
        ports:
          http:
            port: &httpPort 3001

    ingress:
      main:
        className: internal
        annotations:
#          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          hajimari.io/appName: Photos
          hajimari.io/icon: heroicons:photo
          hajimari.io/instance: "admin"
        hosts:
          - host: &host "photos.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: *httpPort
        tls:
          - hosts:
              - *host

    persistence:
      config:
        type: configMap
        name: *configMap
        globalMounts:
          - path: /config

      library:
        existingClaim: immich-upload-pvc
        globalMounts:
          - path: *mediaLocation

      geocoding-dump:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump

      transformers-cache:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.transformers_cache
