---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
  namespace: database
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - worker
    controllers:
      pgadmin:
        type: statefulset
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: ceph-block
              globalMounts:
                - path: /var/lib/pgadmin
        annotations:
          reloader.stakater.com/auto: "true"
#          secret.reloader.stakater.com/reload: authelia-secret
        pod:
          securityContext:
            runAsUser: 5050
            runAsGroup: 5050
            fsGroup: 5050
            fsGroupChangePolicy: OnRootMismatch
        containers:
          app:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: 8.10@sha256:ab92b145c617f3c48ff54ed2cd765210a12e7b4f0d0da7897d944b2a90203910
            envFrom:
              - secretRef:
                  name: pgadmin-secret
            resources:
              requests:
                cpu: 15m
                memory: 100M
              limits:
                memory: 500M

    service:
      app:
        controller: *app
        ports:
          http:
            port: 80

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: mdi:database
          hajimari.io/enable: "true"
          hajimari.io/group: Databases
          hajimari.io/appName: pgAdmin
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      server-json:
        enabled: true
        type: configMap
        name: servers-json
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json
